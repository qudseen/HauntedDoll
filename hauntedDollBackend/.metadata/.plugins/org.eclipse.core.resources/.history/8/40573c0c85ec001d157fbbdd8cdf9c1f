package com.development.service;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path; 
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import com.development.dao.UserDAO;
import com.development.dao.DbDAO;
import com.development.dao.OrderDAO;
import com.development.dao.DollNameDAO;
import com.development.dao.DollSizeDAO;
import com.development.dao.ExtraDAO;
import com.development.domain.User;
import com.development.domain.Status;
import com.development.domain.testxml;
import com.development.domain.DollName;
import com.development.domain.DollSize;
import com.development.domain.Extra;
import com.development.domain.Order;

@Path("/UserService")
public class UserService{
	private String dbUrl = "jdbc:mysql://localhost:3306/haunted_doll";
	private String user = "admin";
	private String password = "password";
			
	DbDAO dbDAO = new DbDAO(dbUrl, user, password);
	UserDAO userDAO = new UserDAO(dbDAO);
	OrderDAO orderDAO = new OrderDAO(dbDAO);
	DollNameDAO dollNameDAO = new DollNameDAO(dbDAO);
	DollSizeDAO dollSizeDAO = new DollSizeDAO(dbDAO);
	ExtraDAO extraDAO = new ExtraDAO(dbDAO);

	@GET
	@Path("/test") 
	@Produces(MediaType.APPLICATION_XML)
	public testxml test(){ 
		testxml test = new testxml("name");
		return test;
	}

	@GET
	@Path("/signup")
	@Produces(MediaType.APPLICATION_XML)
	public Status signup(@QueryParam("name") String name, @QueryParam("username") String username, @QueryParam("email") String email, @QueryParam("password") String password){ 
		Status sts = new Status("");
  	  	if (name == "" || username == "" || email == "" || password == "") return null;
  	  
		try {
			userDAO.signup(name, username, email, password);
			sts.setStatus("Success");
			return sts;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			sts.setStatus("Failure");
			return sts;
		}
	}
   
   @GET
   @Path("/signin")
   @Produces(MediaType.APPLICATION_XML)
   public User signin(@QueryParam("username") String username, @QueryParam("password") String password){
      try {
    	  if (username == "" || password == "") return null;
		User usr = userDAO.signin(username, password);
		return usr;
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return null;
   }
   
   @GET
   @Path("/getOrders")
   @Produces(MediaType.APPLICATION_XML)
   public List<Order> getOrders(@QueryParam("username") int userId){
      try {
		List<Order> orders = orderDAO.getOrders(userId);
		return orders;
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return null;
   }

   @GET
   @Path("/getUsers")
   @Produces(MediaType.APPLICATION_XML)
   public List<User> getUsers(){
      try {
		List<User> users = userDAO.getAllUsers();
		return users;
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return null;
   }

   @GET
   @Path("/getDollNames")
   @Produces(MediaType.APPLICATION_XML)
   public List<DollName> getDollNames(){
      try {
		List<DollName> dollNames = dollNameDAO.getAllDollNames();
		return dollNames;
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return null;
   }

   @GET
   @Path("/getDollSizes")
   @Produces(MediaType.APPLICATION_XML)
   public List<DollSize> getDollSizes(){
      try {
		List<DollSize> dollSizes = dollSizeDAO.getAllDollSizes();
		return dollSizes;
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return null;
   }

   @GET
   @Path("/getExtras")
   @Produces(MediaType.APPLICATION_XML)
   public List<Extra> getExtras(){
      try {
		List<Extra> extras = extraDAO.getAllExtras();
		return extras;
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return null;
   }

}